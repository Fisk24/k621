#: import SlideTransition kivy.uix.screenmanager.FadeTransition
#: include lib/uix/queueview.kv
#: include lib/uix/postview.kv

<DevLabel@Label>:
	size_hint_y: None
	text_size: self.size
	height: 17
	markup: True
	halign: 'left'
	valign: 'bottom'
	
<DevBox@BoxLayout>:

<SidewaysButton@Button>:
	size_hint_y: None
	size_hint_x: None
	# turn button sideways
	canvas.before:
        PushMatrix
        Rotate:
            angle: 90
            origin: self.center
    canvas.after:
        PopMatrix
	
<ThumbLabel@Label>:
	markup: True
	
<Thumbnail>:	
	size_hint: (None, None)
	size: (200, 275)
	padding: 10
	BoxLayout:
		size_hint: (None, None)
		size: (self.parent.width, self.parent.height)
		pos: (self.parent.x, self.parent.y)
		padding: 5
		orientation: 'vertical'
		AsyncImage:
			id: preview
			allow_stretch: True
			canvas.before:
				Color:
					rgba: 0.2, 0.3451, 0.5098, 1
				Rectangle:
					pos: self.pos
					size: self.size
		BoxLayout:
			id: post_score
			size_hint_y: None
			size_hint_x: None
			width: preview.width
			height: 25
			canvas.before:
				Color:
					rgba: 0.2, 0.3451, 0.5098, 1
				Rectangle:
					pos: self.pos
					size: self.size
			ThumbLabel:
				id: score
				halign: 'right'
				text: ""
			ThumbLabel:
				id: fav_count
				text: ""
			ThumbLabel:
				id: rating
				text: ""

<PostSelectionScreen>:
	name: "postSelection"
	
<K621ActionBar>:	
	ActionView:
		ActionPrevious:
			title: 'Testing Previous'
			with_previous: True
		
<K621Ui>:
	BoxLayout:
		orientation: 'vertical'
		K621ActionBar:
			manager: screenCoord
				#ActionButton:
				#	text: 'Queue'
				#	on_press:
				#		screenCoord.transition.direction = 'left'
				#		screenCoord.current = 'queueView'
				
		Button:
			text: 'Queue'
			size_hint_y: None
			height: 20
			on_release:
				screenCoord.current = 'queueView'
				
		ScreenCoordinator:
			id: screenCoord
			metadata: pGrid.metadata
			#on_metadata: print("My data changed") # <-- Wow thats cool
			PostSelectionScreen:
				name: 'postSelection'
				BoxLayout:
					id: main_view
					orientation: 'vertical'
					ScrollView:
						id: gridScroll
						canvas.before:
							Color:
								rgba: 0.0039, 0.1804, 0.3373, 1
							Rectangle:
								pos: self.pos
								size: self.size
						do_scroll_x: False
						do_scroll_y: True
						size_hint_x: 0.8
						pos_hint: {'center_x': .5}
						BoxLayout:
							orientation: 'vertical'
							size_hint_x: 1
							size_hint_y: None
							height: pGrid.height + 50
							PostGrid:
								id: pGrid
								origin: root
								currentPage: screenCoord.currentPage
								size_hint_x: 1
								size_hint_y: None
							BoxLayout:
								id: pageSelection
								Button:
									text: 'Previous Page'
									on_release: screenCoord.currentPage -= 1
								Label:
									text: 'Current Page: ' + str(screenCoord.currentPage)
								Button:
									text: 'Next Page'
									on_release: screenCoord.currentPage += 1
							
			QueueViewScreen:
				id: queueView
				name: 'queueView'
				manager: screenCoord
				Button:
					text: 'Back'
					size_hint_y: None
					height: 20
					on_release:
						queueView.manager.current = 'postSelection'
				QueueViewManager:
					id: queueManager
					loop: True
					origin: root
					manager: screenCoord
					ignore_perpendicular_swipes: True
						
	DevBox:
		id: dev_info 
		pos: (20, (root.height-self.height)-60)
		orientation: 'vertical'
		size_hint: (None, None)
		height: root.height # 0 = Disabled, root.height = Enabled
		width: root.width
		DevLabel:
			text: "[b]Window info:[/b]"
		DevLabel:
			text: "Width: " + str(root.width)
		DevLabel:
			text: "Height: " + str(root.height)
		DevLabel:
			text: "Scroll Width: " + str(gridScroll.width)
		DevLabel:
			text: "pGrid Spacing: " + str(pGrid.spacing)
		DevLabel:
			text: "posts: " + str(pGrid.postCount)
		DevLabel:
			text: "new_target: " + str(screenCoord.new_target)
		DevBox:
			id: dev_target_info 
			orientation: 'vertical'
			DevLabel:
				text: '[b]Post Info:[/b]'
			Widget:
			
		
		
		
		
		
		
		
		
		